<?php$contents.="<center><big><h1><u>Warm Up</u></h1></big></center><div style='text-align:justify; width:520px'>A sequence of 0 &lt; N &lt; 100 positive numbers is given.<br /><b>All numbers are within the range of 32 bit integer.<br /></b><br />(i)  Find the longest increasing subsequence of the given sequence (The subsequence elements are in sorted order, lowest to highest, and subsequence is as long as possible. This subsequence is not necessarily contiguous.) <br />(ii) Delete this sequence of numbers from the array. <br />Repeat step (i) and (ii) for the new array.<br />Print the number of times deletion occurs till the array becomes empty.<br /><br />For example, given N=5,<br />the numbers are 5, 6, 3, 9, 10<br />The longest increasing subsequence of the given sequence is 5, 6, 9, 10<br />After deleting these numbers, the new array is 3<br />Clearly 3 is the only longest increasing subsequence.<br />After deleting 3, the array becomes empty.<br />So deletion occurs twice, in this case. Hence output 2.<br /><br />Assume that all longest increasing subsequence are unique at each and every step. Also All elements of sequence are distinct.<br /><pre>Input Format1st line:N 2nd line:N space separated numbersOutput FormatNumber of times deletion occursSample Test CaseInput55 6 3 9 10Output2</pre></div>";?>